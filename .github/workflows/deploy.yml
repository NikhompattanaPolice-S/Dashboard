            - name: checkout-action
  # You may pin to the exact commit or the version.
  # uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d
  uses: taiki-e/checkout-action@v1.3.1
             - name: Setup Node.js environment
  uses: actions/setup-node@v3.9.1
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optiona
                - name: npm/yarn/pnpm install
  # You may pin to the exact commit or the version.
  # uses: Jaid/action-npm-install@9483da054882538350947c4147de4c8adbf0d597
  uses: Jaid/action-npm-install@v1.2.4
  with:
    # NODE_ENV setting for installing execution (affects the amount of dependencies installed, but I would recommend keeping development in any case).
    nodeEnv: # optional, default is development
    # Can be "npm", "yarn", "pnpm" or "auto". "auto" will determine the package manager by looking into the repo's files. This is very accurate, so you normally don't want to change this.
    packageManager: # optional, default is auto
    # If true and node_modules folder already exists, this action will be skipped assuming npm install is not required.
    skipIfNodeModulesExists: # optional, default is false

    npm install

    npm run build
          
           
          
